{"version":3,"sources":["Components/SearchBar/SearchBar.js","Components/TweetsList/Tweet/Tweet.js","Components/TweetsList/TweetsList.js","Components/Graphs/Chart.js","Components/TabMenu/TabMenu.js","Components/QueryTweets/QueryTweet.js","Components/TopMenu/TopMenu.js","App.js","reportWebVitals.js","index.js"],"names":["SearchBar","props","useState","query","setQuery","Form","onSubmit","onClickSearch","loading","loadingAPIResponse","className","Input","required","placeholder","onChange","event","target","value","type","Icon","name","Tweet","hashtags","length","map","hashtag","List","Item","Content","floated","Header","href","id","Description","created_at","favourite_count","text","vader","bow","TweetsList","APIresponse","tweets","selection","divided","verticalAlign","tweet","author_name","Chart","height","width","data","x","y","Component","TabPanel","children","index","other","role","hidden","aria-labelledby","Box","p","Typography","a11yProps","useStyles","makeStyles","theme","root","flexGrow","backgroundColor","palette","background","paper","display","tabs","borderRight","divider","TabMenu","classes","React","setValue","Tabs","orientation","variant","newValue","aria-label","Tab","tab","label","showAPIResponse","QueryTweet","setData","setLoadingAPIResponse","setShowAPIResponse","fetch","then","response","json","fetchTweets","TopMenu","Breadcrumb","size","Section","link","Divider","active","App","Container","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a8d028a3.chunk.js","sourcesContent":["import React, { useState} from 'react'\r\nimport { Form, Icon, Input } from 'semantic-ui-react'\r\n\r\nconst SearchBar = (props) => {\r\n\r\n    const [query, setQuery] = useState('')\r\n\r\n    const onChangeHandler = (event) => {\r\n        setQuery(event.target.value)\r\n    }\r\n\r\n    //add loading property when loading results and action={{ icon: 'search' }} onClickSearch\r\n    return (\r\n        <Form onSubmit={() => props.onClickSearch(query)} loading={props.loadingAPIResponse}>\r\n            <div className=\"teste\">\r\n                <Input\r\n                    required\r\n                    placeholder='Machine Learning, Artificial Intelligence, Programming...'\r\n                    onChange={onChangeHandler} />\r\n                <button type=\"submit\" className=\"buttontest\"><Icon name=\"search\" /></button>\r\n\r\n            </div>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default SearchBar","import React from 'react'\r\nimport { Button, List } from 'semantic-ui-react'\r\n\r\nconst Tweet = (props) => {\r\n    let hashtags = null\r\n    if(props.hashtags.length>0){\r\n      hashtags = <h4>Hashtags: {props.hashtags.map(hashtag => <div className=\"hashtag\">#{hashtag} </div>)}</h4>\r\n    }\r\n    return(\r\n        <List.Item>\r\n        <List.Content floated='right'>\r\n          {/* <Button onClick={()=>{}} >Add</Button> */}\r\n        </List.Content>\r\n        <List.Content>\r\n            <List.Header>{props.name} <a target=\"blank\" href={\"https://twitter.com/user/status/\"+ props.id}>Visit</a></List.Header>\r\n            <List.Description>Created at: {props.created_at} - Liked by {props.favourite_count}</List.Description>\r\n            <p></p>\r\n            <p>{props.text}</p>\r\n            <h4>\r\n              <p>Classification Vader: {props.vader}</p> \r\n              <p>Classification BOW: {props.bow}</p>\r\n            </h4>\r\n            {hashtags}\r\n        </List.Content>\r\n      </List.Item>\r\n    )\r\n}\r\n\r\nexport default Tweet","import React from \"react\"\r\nimport { List } from 'semantic-ui-react'\r\nimport Tweet from \"./Tweet/Tweet\"\r\nimport \"./TweetsList.css\"\r\n\r\nconst TweetsList = (props) => {\r\n\r\n    return (\r\n        <div className=\"TweetsList\" >\r\n            <h1>Tweets</h1>\r\n            <p>Showing {props.APIresponse.tweets.length} results</p>\r\n            <p>Results for query: {props.APIresponse.query}</p>\r\n            <List selection divided verticalAlign='middle'>\r\n                {props.APIresponse.tweets.map(tweet => {\r\n                    return <Tweet\r\n                        name={tweet.author_name}\r\n                        key={tweet.id}\r\n                        id={tweet.id}\r\n                        created_at={tweet.created_at}\r\n                        text={tweet.text}\r\n                        vader = {tweet.vader}\r\n                        bow = {tweet.bow}\r\n                        hashtags={tweet.hashtags}\r\n                        favourite_count={tweet.favourite_count}\r\n                    />\r\n                })}\r\n            </List>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default TweetsList","import React, { Component } from 'react';\r\n\r\nimport '../../../node_modules/react-vis/dist/style.css';\r\nimport {XYPlot, LineSeries, VerticalGridLines, HorizontalGridLines, XAxis, YAxis} from 'react-vis';\r\n\r\nclass Chart extends Component {\r\n  render() {\r\n    const data = [\r\n      {x: 0, y: 8},\r\n      {x: 1, y: 5},\r\n      {x: 2, y: 4},\r\n      {x: 3, y: 9},\r\n      {x: 4, y: 1},\r\n      {x: 5, y: 7},\r\n      {x: 6, y: 6},\r\n      {x: 7, y: 3},\r\n      {x: 8, y: 2},\r\n      {x: 9, y: 0}\r\n    ];\r\n    return (\r\n      <div className=\"\">\r\n        <h1>Tweets Distribution</h1>\r\n        <XYPlot height={300} width= {300}>\r\n          <LineSeries data={data} />\r\n          <VerticalGridLines />\r\n          <HorizontalGridLines />\r\n          <XAxis />\r\n          <YAxis />\r\n        </XYPlot>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Chart;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport TweetsList from \"../TweetsList/TweetsList\"\r\nimport Chart from \"../Graphs/Chart\"\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`vertical-tabpanel-${index}`}\r\n      aria-labelledby={`vertical-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `vertical-tab-${index}`,\r\n    'aria-controls': `vertical-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n    display: 'flex',\r\n    height: `${100}%`,\r\n  },\r\n  tabs: {\r\n    borderRight: `1px solid ${theme.palette.divider}`,\r\n  },\r\n}));\r\n\r\nexport default function TabMenu(props) {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Tabs\r\n        orientation=\"vertical\"\r\n        variant=\"scrollable\"\r\n        value={value}\r\n        onChange={handleChange}\r\n        aria-label=\"Vertical tabs example\"\r\n        className={classes.tabs}\r\n      >\r\n        <Tab className={classes.tab} label=\"Tweets\" {...a11yProps(0)} />\r\n        <Tab className={classes.tab} label=\"Distribution\" {...a11yProps(1)} />\r\n      </Tabs>\r\n\r\n      <TabPanel value={value} index={0}>\r\n        {props.showAPIResponse ? <TweetsList APIresponse={props.data} /> : <p>Enter items on search bar</p>}\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        {props.showAPIResponse ? <Chart/>: <p>Enter items on search bar</p>}\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n}","import React, { useState } from 'react'\r\nimport SearchBar from \"../SearchBar/SearchBar\"\r\nimport TabMenu from \"../TabMenu/TabMenu\"\r\n\r\nconst QueryTweet = (props) => {\r\n\r\n    const [data, setData] = useState({ tweets: [] })\r\n    const [loadingAPIResponse, setLoadingAPIResponse] = useState(false)\r\n    const [showAPIResponse, setShowAPIResponse] = useState(false)\r\n\r\n    const fetchTweets = (query) => {\r\n        fetch(`https://tweet-analysis-app.herokuapp.com/api/tweets?query=${query}`).then(response => response.json().then(data => {\r\n            setShowAPIResponse(true)\r\n            setData(data)\r\n            setLoadingAPIResponse(false)\r\n        }))\r\n    }\r\n\r\n    const RequestAPIHandler = (query) => {\r\n        setLoadingAPIResponse(true)\r\n        fetchTweets(query)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <SearchBar loadingAPIResponse={loadingAPIResponse} onClickSearch={RequestAPIHandler} />\r\n            <TabMenu data={data} showAPIResponse={showAPIResponse}></TabMenu>\r\n        </div>)\r\n}\r\n\r\nexport default QueryTweet","import React from 'react'\r\nimport { Breadcrumb } from 'semantic-ui-react'\r\nimport \"./TopMenu.css\"\r\n\r\nconst TopMenu = (props) => {\r\n\r\n  return (\r\n    <div className=\"TopMenu\">\r\n      <Breadcrumb className=\"Breadcrumb\" size=\"huge\">\r\n        <Breadcrumb.Section link>Home</Breadcrumb.Section>\r\n        <Breadcrumb.Divider />\r\n        <Breadcrumb.Section active>About</Breadcrumb.Section>\r\n      </Breadcrumb>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TopMenu","import React from \"react\"\nimport QueryTweets from \"./Components/QueryTweets/QueryTweet\"\nimport TopMenu from \"./Components/TopMenu/TopMenu\"\nimport { Container } from 'semantic-ui-react'\n\nfunction App() {\n  return (\n    <div>\n      <TopMenu/>\n      <Container><QueryTweets/></Container>\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'semantic-ui-css/semantic.min.css'\nimport \"./customize.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}